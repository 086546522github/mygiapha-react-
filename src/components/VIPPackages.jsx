import React, { useState } from 'react';
import './VIPPackages.css';

export default function VIPPackages({ user, onNavigate }) {
  const [selectedPlan, setSelectedPlan] = useState('basic');

  const plans = [
    {
      id: 'free',
      name: 'Mi·ªÖn ph√≠',
      price: 0,
      period: '',
      features: [
        'T·ªëi ƒëa 50 th√†nh vi√™n',
        '1 c√¢y gia ph·∫£',
        'Xu·∫•t Excel c∆° b·∫£n',
        'H·ªó tr·ª£ email',
        'L∆∞u tr·ªØ 1GB'
      ],
      limitations: [
        'Kh√¥ng c√≥ h·ªó tr·ª£ 24/7',
        'Kh√¥ng c√≥ backup t·ª± ƒë·ªông',
        'Kh√¥ng c√≥ t√≠nh nƒÉng chia s·∫ª'
      ],
      popular: false
    },
    {
      id: 'basic',
      name: 'VIP Basic',
      price: 99000,
      period: '/th√°ng',
      features: [
        'Kh√¥ng gi·ªõi h·∫°n th√†nh vi√™n',
        'T·ªëi ƒëa 5 c√¢y gia ph·∫£',
        'Xu·∫•t Excel n√¢ng cao',
        'H·ªó tr·ª£ email ∆∞u ti√™n',
        'L∆∞u tr·ªØ 10GB',
        'Backup t·ª± ƒë·ªông',
        'Chia s·∫ª v·ªõi gia ƒë√¨nh'
      ],
      limitations: [],
      popular: true
    },
    {
      id: 'premium',
      name: 'VIP Premium',
      price: 199000,
      period: '/th√°ng',
      features: [
        'Kh√¥ng gi·ªõi h·∫°n th√†nh vi√™n',
        'Kh√¥ng gi·ªõi h·∫°n c√¢y gia ph·∫£',
        'Xu·∫•t PDF, Excel n√¢ng cao',
        'H·ªó tr·ª£ 24/7',
        'L∆∞u tr·ªØ kh√¥ng gi·ªõi h·∫°n',
        'Backup t·ª± ƒë·ªông',
        'Chia s·∫ª v·ªõi gia ƒë√¨nh',
        'T√≠nh nƒÉng ph√¢n t√≠ch',
        'API t√≠ch h·ª£p',
        'T√πy ch·ªânh giao di·ªán'
      ],
      limitations: [],
      popular: false
    }
  ];

  const handleUpgrade = (planId) => {
    if (planId === 'free') {
      alert('B·∫°n ƒëang s·ª≠ d·ª•ng g√≥i mi·ªÖn ph√≠!');
      return;
    }
    
    if (user?.vipStatus === planId) {
      alert('B·∫°n ƒë√£ s·ª≠ d·ª•ng g√≥i n√†y!');
      return;
    }

    // Simulate payment process
    const plan = plans.find(p => p.id === planId);
    if (window.confirm(`B·∫°n c√≥ mu·ªën n√¢ng c·∫•p l√™n g√≥i ${plan.name} v·ªõi gi√° ${plan.price.toLocaleString('vi-VN')}‚Ç´${plan.period}?`)) {
      // In a real app, you would integrate with payment gateway
      alert('N√¢ng c·∫•p th√†nh c√¥ng! C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng s·ª≠ d·ª•ng d·ªãch v·ª•!');
      
      // Update user VIP status
      const updatedUser = { ...user, vipStatus: planId };
      localStorage.setItem('currentUser', JSON.stringify(updatedUser));
      onNavigate('dashboard');
    }
  };

  const currentPlan = plans.find(p => p.id === (user?.vipStatus || 'free'));

  return (
    <div className="vip-packages">
      <div className="vip-header">
        <h1>G√≥i d·ªãch v·ª• VIP</h1>
        <p>N√¢ng c·∫•p ƒë·ªÉ tr·∫£i nghi·ªám ƒë·∫ßy ƒë·ªß c√°c t√≠nh nƒÉng cao c·∫•p</p>
        <div className="current-plan">
          <span>G√≥i hi·ªán t·∫°i: </span>
          <strong>{currentPlan?.name}</strong>
        </div>
      </div>

      <div className="plans-grid">
        {plans.map(plan => (
          <div 
            key={plan.id} 
            className={`plan-card ${plan.popular ? 'popular' : ''} ${currentPlan?.id === plan.id ? 'current' : ''}`}
          >
            {plan.popular && <div className="popular-badge">Ph·ªï bi·∫øn nh·∫•t</div>}
            {currentPlan?.id === plan.id && <div className="current-badge">G√≥i hi·ªán t·∫°i</div>}
            
            <div className="plan-header">
              <h3>{plan.name}</h3>
              <div className="plan-price">
                <span className="price">{plan.price.toLocaleString('vi-VN')}‚Ç´</span>
                <span className="period">{plan.period}</span>
              </div>
            </div>

            <div className="plan-features">
              <h4>T√≠nh nƒÉng bao g·ªìm:</h4>
              <ul>
                {plan.features.map((feature, index) => (
                  <li key={index} className="feature-item">
                    <span className="check-icon">‚úÖ</span>
                    {feature}
                  </li>
                ))}
              </ul>
              
              {plan.limitations.length > 0 && (
                <>
                  <h4>H·∫°n ch·∫ø:</h4>
                  <ul>
                    {plan.limitations.map((limitation, index) => (
                      <li key={index} className="limitation-item">
                        <span className="cross-icon">‚ùå</span>
                        {limitation}
                      </li>
                    ))}
                  </ul>
                </>
              )}
            </div>

            <div className="plan-actions">
              {currentPlan?.id === plan.id ? (
                <button className="btn-current" disabled>
                  G√≥i hi·ªán t·∫°i
                </button>
              ) : (
                <button 
                  className={`btn-upgrade ${plan.popular ? 'btn-primary' : 'btn-outline'}`}
                  onClick={() => handleUpgrade(plan.id)}
                >
                  {plan.id === 'free' ? 'Mi·ªÖn ph√≠' : 'N√¢ng c·∫•p ngay'}
                </button>
              )}
            </div>
          </div>
        ))}
      </div>

      {/* FAQ Section */}
      <div className="faq-section">
        <h2>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
        <div className="faq-grid">
          <div className="faq-item">
            <h3>L√†m th·∫ø n√†o ƒë·ªÉ thanh to√°n?</h3>
            <p>Ch√∫ng t√¥i h·ªó tr·ª£ thanh to√°n qua th·∫ª ng√¢n h√†ng, v√≠ ƒëi·ªán t·ª≠ v√† chuy·ªÉn kho·∫£n. Qu√° tr√¨nh thanh to√°n ƒë∆∞·ª£c b·∫£o m·∫≠t tuy·ªát ƒë·ªëi.</p>
          </div>
          
          <div className="faq-item">
            <h3>C√≥ th·ªÉ h·ªßy g√≥i b·∫•t c·ª© l√∫c n√†o kh√¥ng?</h3>
            <p>C√≥, b·∫°n c√≥ th·ªÉ h·ªßy g√≥i VIP b·∫•t c·ª© l√∫c n√†o. D·ªØ li·ªáu c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c gi·ªØ l·∫°i trong 30 ng√†y sau khi h·ªßy.</p>
          </div>
          
          <div className="faq-item">
            <h3>D·ªØ li·ªáu c√≥ ƒë∆∞·ª£c b·∫£o m·∫≠t kh√¥ng?</h3>
            <p>D·ªØ li·ªáu c·ªßa b·∫°n ƒë∆∞·ª£c m√£ h√≥a v√† l∆∞u tr·ªØ an to√†n. Ch√∫ng t√¥i cam k·∫øt b·∫£o v·ªá th√¥ng tin c√° nh√¢n c·ªßa b·∫°n.</p>
          </div>
          
          <div className="faq-item">
            <h3>C√≥ h·ªó tr·ª£ kh√°ch h√†ng kh√¥ng?</h3>
            <p>G√≥i Basic c√≥ h·ªó tr·ª£ email ∆∞u ti√™n, g√≥i Premium c√≥ h·ªó tr·ª£ 24/7 qua nhi·ªÅu k√™nh li√™n l·∫°c.</p>
          </div>
        </div>
      </div>

      {/* Contact Section */}
      <div className="contact-section">
        <h2>B·∫°n c·∫ßn h·ªó tr·ª£?</h2>
        <p>Li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n v·ªÅ g√≥i d·ªãch v·ª• ph√π h·ª£p</p>
        <div className="contact-methods">
          <div className="contact-method">
            <div className="contact-icon">üìß</div>
            <h3>Email</h3>
            <p>support@giaphaviet.com</p>
          </div>
          <div className="contact-method">
            <div className="contact-icon">üìû</div>
            <h3>Hotline</h3>
            <p>1900 1234</p>
          </div>
          <div className="contact-method">
            <div className="contact-icon">üí¨</div>
            <h3>Chat tr·ª±c tuy·∫øn</h3>
            <p>24/7 cho g√≥i Premium</p>
          </div>
        </div>
      </div>
    </div>
  );
}

